<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="image_box.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>